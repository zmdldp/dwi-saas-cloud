<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>saas-file</artifactId>
        <groupId>com.dwi.saas</groupId>
        <version>1.0.0-Cloud-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>saas-file-server</artifactId>
    <name>${project.artifactId}</name>
    <description>文件服务启动模块</description>

    <dependencies>
    
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-datasource-plugin</artifactId>
        </dependency> 
    
    	<dependency>
            <groupId>com.dwi.saas</groupId>
            <artifactId>saas-file-api</artifactId>
            <version>${saas-project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.dwi.saas</groupId>
            <artifactId>saas-authority-api</artifactId>
            <version>${saas-project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.dwi.saas</groupId>
            <artifactId>saas-common</artifactId>
            <version>${saas-project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-security-starter</artifactId>
        </dependency>
        
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-log-starter</artifactId>
        </dependency>
        
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-databases</artifactId>
        </dependency>

        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-swagger2-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-validator-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-xss-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-cloud-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dwi.basic</groupId>
            <artifactId>saas-zipkin-client-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-websocket</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>
        
        <!-- 阿里云oss -->
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>jersey-core</artifactId>
                    <groupId>com.sun.jersey</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- 七牛oss -->
        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
        </dependency>
        <!--  FastDFS -->
        <dependency>
            <groupId>com.github.tobato</groupId>
            <artifactId>fastdfs-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
        </dependency>
        

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
            <scope>compile</scope>
        </dependency>
        
         <!-- @RefreshScope 需要使用 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>

        <!-- 测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <filters>
            <filter>../../src/main/filters/config-${profile.active}.properties</filter>
        </filters>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- docker打包插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <tag>${saas-project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
